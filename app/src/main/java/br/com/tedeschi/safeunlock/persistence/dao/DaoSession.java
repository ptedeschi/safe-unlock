package br.com.tedeschi.safeunlock.persistence.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import br.com.tedeschi.safeunlock.persistence.vo.Settings;
import br.com.tedeschi.safeunlock.persistence.vo.Connection;

import br.com.tedeschi.safeunlock.persistence.dao.SettingsDao;
import br.com.tedeschi.safeunlock.persistence.dao.ConnectionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig settingsDaoConfig;
    private final DaoConfig connectionDaoConfig;

    private final SettingsDao settingsDao;
    private final ConnectionDao connectionDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        settingsDaoConfig = daoConfigMap.get(SettingsDao.class).clone();
        settingsDaoConfig.initIdentityScope(type);

        connectionDaoConfig = daoConfigMap.get(ConnectionDao.class).clone();
        connectionDaoConfig.initIdentityScope(type);

        settingsDao = new SettingsDao(settingsDaoConfig, this);
        connectionDao = new ConnectionDao(connectionDaoConfig, this);

        registerDao(Settings.class, settingsDao);
        registerDao(Connection.class, connectionDao);
    }
    
    public void clear() {
        settingsDaoConfig.getIdentityScope().clear();
        connectionDaoConfig.getIdentityScope().clear();
    }

    public SettingsDao getSettingsDao() {
        return settingsDao;
    }

    public ConnectionDao getConnectionDao() {
        return connectionDao;
    }

}
